name: Quantanamo Bae

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 12 * * MON-FRI"  # Runs every weekday at 12:00 UTC


# Grant explicit permissions to the workflow
permissions:
  contents: write  # allows pushing tags and commits
  issues: write    # allows creating issues/comments

# Define an environment variable that holds the Python version
env:
  PYTHON_VERSION: "3.12"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          find . -type f -name '*.py' -print0 | xargs -0 flake8 --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check Python Compatibility with Vermin
        run: |
          pip install vermin
          set +e
          echo "Scanning the following Python files:"
          find . -type f -name '*.py'
          # Use find to only pass Python files
          find . -type f -name '*.py' -print0 | xargs -0 vermin --verbose --target=${{ env.PYTHON_VERSION }}- \
                 --violations \
                 --backport argparse \
                 --backport asyncio \
                 --backport configparser \
                 --backport dataclasses \
                 --backport enum \
                 --backport importlib \
                 --backport ipaddress \
                 --backport mock \
                 --backport typing \
                 --backport typing_extensions \
                 --no-parse-comments \
                 --eval-annotations
          EXIT_CODE=$?
          echo "Vermin exit code: $EXIT_CODE"
          exit $EXIT_CODE

      - name: Run Tests
        run: |
          pytest

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Semantic Release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
